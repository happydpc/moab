################################################################################
#                           Standard Stuff
################################################################################
AC_INIT(MOAB, 1.1)
AC_CANONICAL_SYSTEM
AM_INIT_AUTOMAKE(MOAB,1.1)

AC_PROG_LN_S
AC_PROG_MAKE_SET

SNL_CHECK_COMPILERS
AM_CONDITIONAL(PARALLEL,[test "x$WITH_MPI" != "xno"])
AC_PROG_LIBTOOL
LIBS="-lm"

AC_CHECK_PROG([ZCAT],[gunzip],[gunzip -c],[])
AC_CHECK_PROG([ZCAT],[gzip],[gzip -cd],[])
AC_CHECK_PROG([ZCAT],[zcat],[zcat],[])
if test "x" = "x$ZCAT"; then
  AC_MSG_WARN([[Cannot run tests: no way to uncompress input files.]])
fi
AC_SUBST([ZCAT])
AM_CONDITIONAL([HAVE_ZCAT],[test "x" = "x$ZCAT"])


################################################################################
#                              HDF5 OPTIONS
################################################################################

SNL_CHECK_HDF5
if test "xno" == "x$HAVE_HDF5"; then
  AC_MSG_WARN([Support for native HDF5 file format disabled])
else
  DEFINES="$DEFINES -DHDF5_FILE"
fi
AM_CONDITIONAL(HDF5_FILE, [test "xno" != "x$HAVE_HDF5"])


################################################################################
#                             NetCDF OPTIONS
################################################################################

SNL_CHECK_NETCDF
if test "xno" == "x$HAVE_NETCDF"; then
  AC_MSG_WARN([Support for ExodusII file format disabled])
else
  DEFINES="$DEFINES -DNETCDF_FILE"
fi
AM_CONDITIONAL(NETCDF_FILE, [test "xno" != "x$HAVE_NETCDF"])


#################################################################################
#                             Documentation
#################################################################################
AC_ARG_ENABLE([doxygen],
[AC_HELP_STRING([[--enable-doxygen(=DIR)]],[Specify directory where Doxygen program is installed])
AC_HELP_STRING([--disable-doxygen],[Do not generate API documentation (default)])],
                        [ENABLE_DOXYGEN="$enableval"],[ENABLE_DOXYGEN=no] )
if test "x$ENABLE_DOXYGEN" = "xyes"; then
  AC_PATH_PROG( [DOXYGEN], [doxygen], [no] )
elif test "x$ENABLE_DOXYGEN" != "xno"; then
  AC_PATH_PROG( [DOXYGEN], [doxygen], [no], [$ENABLE_DOXYGEN] )
fi
if test "x$ENABLE_DOXYGEN" != "xno"; then
  if test "x$DOXYGEN" = "xno"; then
    AC_MSG_ERROR("Doxygen executable not found.")
  fi
fi
AC_SUBST([DOXYGEN])
AM_CONDITIONAL([ENABLE_DOXYGEN],[test "x$ENABLE_DOXYGEN" != "xno"])



###############################################################################
#                           Optional Tools
###############################################################################
  # Define a macro to avoid typing this for each individual tool
  # Usage: MB_OPTIOANL_TOOL( name, configdir, default )
  #  name      - name of option
  #  default   - yes/no, $ENABLE_TOOLS overrides this if set
  # Actions:
  #  sets ENABLE_${tool} to 'yes' or 'no'
  #  creates ENABLE_${tool} automake conditional
  #  optionally does recursive configure
AC_DEFUN([MB_OPTIONAL_TOOL],[
  mb_default_$1=$2
  if test "x" != "x$ENABLE_TOOLS"; then
    mb_default_$1="$ENABLE_TOOLS"
  fi
  AC_ARG_ENABLE( [$1],
[AC_HELP_STRING([--enable-$1],[Build tool: $1])
AC_HELP_STRING([--disable-$1],[Don't build $1])],
                 [ENABLE_$1=$enableval],[ENABLE_$1=${mb_default_$1}] )
  AM_CONDITIONAL([ENABLE_$1],[test "x${ENABLE_$1}" != "xno"])
  AC_MSG_CHECKING([if $1 is to be built])
  AC_MSG_RESULT([${ENABLE_$1}])
])
  # The default for all tools
AC_ARG_ENABLE( [tools], [
AC_HELP_STRING([--enable-tools],[Build all tools by default])
AC_HELP_STRING([--disable-tools],[Disable all tools by default])],
                         [ENABLE_TOOLS=$enableval],[ENABLE_TOOLS=] )
  # Individual tools
MB_OPTIONAL_TOOL([mbconvert],    [yes])
MB_OPTIONAL_TOOL([hexmodops],    [no] )
MB_OPTIONAL_TOOL([mbchaco],      [no] )
MB_OPTIONAL_TOOL([mbperf],       [no] )
MB_OPTIONAL_TOOL([qvdual],       [no] )
MB_OPTIONAL_TOOL([mbsize],       [no] )
MB_OPTIONAL_TOOL([mbskin],       [no] )
MB_OPTIONAL_TOOL([mbtagprop],    [no] )
MB_OPTIONAL_TOOL([spheredecomp], [no] )
if test "x$ENABLE_qvdual" = "xyes"; then
  AC_CONFIG_SUBDIRS([tools/qvdual])
fi
if test "x$ENABLE_mbchaco" = "xyes"; then
  AC_CONFIG_SUBDIRS([tools/mbchaco])
fi


################################################################################
#                           Output Files
################################################################################
AC_SUBST([INCLUDES])
AC_SUBST([DEFINES])
AC_MSG_RESULT([CXXFLAGS = $CXXFLAGS])
AC_CONFIG_FILES([Makefile 
                 config.make 
                 mhdf/Makefile
                 test/Makefile
                 test/h5file/Makefile
                 test/dual/Makefile
                 tools/Makefile
                 tools/converter/Makefile
                 tools/hexmodops/Makefile
                 tools/mbperf/Makefile
                 tools/size/Makefile
                 tools/skin/Makefile
                 tools/tagprop/Makefile
                 tools/spheredecomp/Makefile
                 ])
AC_OUTPUT
